#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define TRI 3
#define GAM 4
#define GAS 5

/ {
  behaviors {
    ht: hold_tap {
      label = "hold_tap";
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "tap-preferred";
      tapping-term-ms = <200>;
      quick-tap-ms = <150>;
      require-prior-idle-ms = <100>;
      bindings = <&kp>, <&kp>;
    };
  };

  conditional_layers {
    compatible = "zmk,conditional-layers";

    tri_layer {
      if-layers = <1 2>;
      then-layer = <3>;
    };
  };

  combos {
    compatible = "zmk,combos";

    combo_capsword {
      bindings = <&caps_word>;
      key-positions = <12 17>;
      layers = <DEF>;
      timeout-ms = <40>;
      require-prior-idle-ms = <150>;
    };

    combo_esc {
      timeout-ms = <50>;
      key-positions = <16 17>;
      bindings = <&kp ESC>;
    };

    combo_tab {
      timeout-ms = <50>;
      key-positions = <11 12>;
      bindings = <&kp TAB>;
    };

    combo_colon {
      bindings = <&kp COLON>;
      key-positions = <17 18>;
      timeout-ms = <50>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp Q          &kp W       &kp E         &kp R        &kp T    &kp Y  &kp U        &kp I         &kp O       &kp P
        &ht LGUI A     &ht LALT S  &ht LSHIFT D  &ht LCTRL F  &kp G    &kp H  &ht RCTRL J  &ht RSHIFT K  &ht RALT L  &ht RGUI SQT
        &kp Z          &kp X       &kp C         &kp V        &kp B    &kp N  &kp M        &kp COMMA     &kp DOT     &kp FSLH
        &kp BKSP       &lt SYM SPACE                                                                     &lt NAV ENTER   &kp TAB
      >;
    };

    nav {
      bindings = <
        &kp INS     &kp N7   &kp N8  &kp N9  &kp C_VOL_UP    &kp HOME    &kp PG_DN  &kp PG_UP   &kp END   &kp SEMI
        &kp DEL     &kp N4   &kp N5  &kp N6  &kp C_MUTE      &kp LARW    &kp DARW   &kp UARW    &kp RARW  &kp COLON
        &caps_word  &kp N1   &kp N2  &kp N3  &kp C_VOL_DN    &kp C_PREV  &kp C_PP   &kp C_NEXT  &trans    &trans
        &kp N0      &kp ESC                                                                     &trans    &trans
      >;
    };

    left_layer {
      bindings = <
        &trans     &kp LBKT  &kp LBRC  &kp LPAR   &trans       &kp CARET  &kp RPAR   &kp RBRC   &kp RBKT  &kp TILDE
        &kp EXCL   &kp AT    &kp HASH  &kp DLLR   &kp PRCNT    &kp ASTRK  &kp MINUS  &kp EQUAL  &kp BSLH  &kp GRAVE
        &kp GRAVE  &trans    &kp SEMI  &kp COLON  &trans       &kp AMPS   &kp UNDER  &kp PLUS   &kp PIPE  &trans
        &trans     &trans                                                                       &trans    &trans
      >;
    };

    tri_layer {
      bindings = <
        &trans      &kp F7  &kp F8  &kp F9  &kp F10    &to DEF     &to GAM       &trans        &kp C_SNAPSHOT  &kp PSCRN
        &trans      &kp F4  &kp F5  &kp F6  &kp F11    &trans      &trans        &trans        &trans          &kp C_REC
        &bt BT_CLR  &kp F1  &kp F2  &kp F3  &kp F12    &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &trans          &trans
        &trans      &trans                                                                     &trans          &trans
      >;
    };

    gaming_layer {
      bindings = <
        &kp TAB     &kp N1        &kp N2  &kp N3  &kp N4    &kp Y  &kp U  &kp I      &kp O    &kp P
        &kp LSHIFT  &kp Q         &kp W   &kp E   &kp R     &kp H  &kp J  &kp K      &kp L    &kp SQT
        &kp LCTRL   &kp A         &kp S   &kp D   &kp F     &kp N  &kp M  &kp COMMA  &kp DOT  &kp ESC
        &lt GAS BKSP    &kp SPACE                                                    &kp ENTER  &to DEF
      >;
    };

    gaming_symbols {
      bindings = <
        &kp ESC    &kp N5    &kp N6  &kp N7  &kp N8    &kp Y  &kp U  &kp I      &kp O    &kp P
        &kp Z      &trans    &trans  &kp T   &kp G     &kp H  &kp J  &kp K      &kp L    &kp SQT
        &kp LALT   &kp X     &kp C   &kp V   &kp B     &kp N  &kp M  &kp COMMA  &kp DOT  &kp ESC
        &kp BKSP  &kp SPACE                                                     &kp ENTER  &to DEF
      >;
    };
  };
};

